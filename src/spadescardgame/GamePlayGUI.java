
package spadescardgame;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Arrays;
import javax.swing.JOptionPane;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.border.Border;
import java.util.Timer;

/**
 *
 * @author Jack Munsaka
 * @author Kyle Smith
 */
public class GamePlayGUI extends javax.swing.JFrame {
       
    // mouse listener
    private MouseListener mouseListener;
    
    // 52 card deck
    private Deck deck = new Deck();
    
    // array of scores
    private int [] scores = new int[4];
    
    // username
    static String username = "";
    
    // create game players
    private Player player;
    private AI jane;
    private AI bob;
    private AI liz;
    
    // Table for Scores and bids
    private DefaultTableModel model1;
    
    // Table for played cards
    private DefaultTableModel model2;
    
    static int rowIndex = 0;
    
    // check whether human can play 
    private boolean playerTurnToPlay = false;
    
    // num of cards
    private int numberOfCardsLeft = 13;
    
    // round
    private int round = 1;
    String roundString;
    
    //scores in String form
    static String ai1_Score = "0";
    static String ai2_Score = "0";
    static String ai3_Score = "0";
    static String playerScore = "0";

    
    //copies of cards played
    static Card playercard;
    static Card ai1card;
    static Card ai2card;
    static Card ai3card;
    
    
    
    public GamePlayGUI() {
        initComponents();
        deck.shuffle();
        setHandsInvisible();
        
        username = (String)JOptionPane.showInputDialog(null, "What's your name?");
        while(username.length() == 0){
            username = (String)JOptionPane.showInputDialog(null, "Please enter your name");
        }
        // instantiate game players
        player = new Player(username,deck.getDeck());
        jane = new AI("Jane",deck.getDeck(),1);
        bob = new AI("Bob",deck.getDeck(),2);
        liz = new AI("Liz",deck.getDeck(),3);
        
        JOptionPane.showMessageDialog(null, "Welcome " + username);
        jTextField2.setText(username); 
        
        //create new table models
        model1 = (DefaultTableModel)jTable1.getModel();
        model2 = (DefaultTableModel)jTable2.getModel();
        roundString = Integer.toString(round);
        jTextField9.setText(roundString);
        
        gameLoop();
        gameOverCheck();
        addRowsToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setText("Quit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, -1, -1));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "You", "Jane", "Bob", "Liz"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(28);
        jScrollPane1.setViewportView(jTable1);

        jLayeredPane1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 510, 370, 80));

        jButton1.setText("Deal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, -1, -1));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jTextField1.setText("Round");
        jTextField1.setBorder(null);
        jTextField1.setOpaque(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 90, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });
        jLayeredPane1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 380, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 380, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 380, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel4MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 380, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 380, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel6MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 380, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel7MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel8MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 380, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel9MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel11MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel12MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel13MouseEntered(evt);
            }
        });
        jLayeredPane1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLayeredPane1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 190, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLayeredPane1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, -1, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/b1fv.png"))); // NOI18N
        jLayeredPane1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setOpaque(false);

        jLabel17.setName("jLabel17"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 62, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLayeredPane1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 350, 240));

        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(255, 255, 255));
        jTextField6.setText("Jane");
        jTextField6.setBorder(null);
        jTextField6.setOpaque(false);
        jLayeredPane1.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 120, -1, -1));

        jTextField7.setEditable(false);
        jTextField7.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(255, 0, 51));
        jTextField7.setText("Bob");
        jTextField7.setBorder(null);
        jTextField7.setOpaque(false);
        jLayeredPane1.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, -1, -1));

        jTextField8.setEditable(false);
        jTextField8.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(51, 51, 255));
        jTextField8.setText("Liz");
        jTextField8.setBorder(null);
        jTextField8.setOpaque(false);
        jLayeredPane1.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jTextField9.setEditable(false);
        jTextField9.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jTextField9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField9.setOpaque(false);
        jLayeredPane1.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 40, 40));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel21.setText("Scores");
        jLayeredPane1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 480, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User", "Jane", "Bob", "Liz"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jLayeredPane1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 510, 410, 90));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel22.setText("Played Cards");
        jLayeredPane1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 480, -1, -1));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FaceImages/Liz.png"))); // NOI18N
        jLayeredPane1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 130));

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FaceImages/Jane.png"))); // NOI18N
        jLayeredPane1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 170, -1, -1));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FaceImages/Bob.png"))); // NOI18N
        jLayeredPane1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, -1, -1));

        jButton3.setText("Rules");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 20, -1, -1));

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jTextField2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLayeredPane1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, 180, 30));

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardbackground.jpg"))); // NOI18N
        jLabel23.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLayeredPane1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 610));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    
    public void removePlayedCardFromGUI(javax.swing.JLabel label){
        label.setVisible(false);
        jLayeredPane1.remove(label);
       
    }
    
    public void setTableVisible(){
        jLabel17.setVisible(true);
        jLabel18.setVisible(true);
        jLabel19.setVisible(true);
        jLabel20.setVisible(true);
    }
    
    public void setTableInvisible(){
        jLabel17.setVisible(false);
        jLabel18.setVisible(false);
        jLabel19.setVisible(false);
        jLabel20.setVisible(false);
    }
    
    public void setHandsInvisible(){
        for (javax.swing.JLabel labels : Arrays.asList(jLabel1,jLabel2,jLabel3,jLabel4,jLabel5,
                                                        jLabel6,jLabel7,jLabel8,jLabel9,jLabel10,
                                                        jLabel11,jLabel12,jLabel13,jLabel14,jLabel15,jLabel16)) {
            labels.setVisible(false);
        }
    }
    
    public void setHandsVisible(){
        for (javax.swing.JLabel labels : Arrays.asList(jLabel1,jLabel2,jLabel3,jLabel4,jLabel5,
                                                        jLabel6,jLabel7,jLabel8,jLabel9,jLabel10,
                                                        jLabel11,jLabel12,jLabel13,jLabel14,jLabel15,jLabel16)) {
            labels.setVisible(true);
        }
    }
    
    public void setJlabelImage(javax.swing.JLabel label, int index, int playerOrAI){
        
        switch (playerOrAI) {
            case 0:
                label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/"+player.getPlayerCardDeck().get(index).getImage())));
                break;
            case 1:
                label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/"+jane.selectCard(index).getImage())));
                break;
            case 2:
                label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/"+bob.selectCard(index).getImage())));
                break;
            case 3:
                label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/"+liz.selectCard(index).getImage())));
                break;      
        }
        
    }    
    
    public void gameOverCheck(){
           
        if(numberOfCardsLeft == 0){

            ResultsGUI results = new ResultsGUI(player,jane,bob,liz);
            results.setVisible(true);
            dispose();            
                    
        }
        
    }
   
    // set the jLabel icon
    public void ai1playcard(int index){        
        setJlabelImage(jLabel18,index,1);//jane        
    }
    
    public void ai2playcard(int index){               
        setJlabelImage(jLabel19,index,2);//Bob
    }
    
    public void ai3playcard(int index){                
        setJlabelImage(jLabel20,index,3);//liz       
    }
    
    
    // method for all AI players to play with delays inbetween
    public void allAIsPlay(int index){
        inPlay = true;
        
        TimerTask firstAIPlays = new TimerTask() {
            @Override
            public void run() {
                ai1playcard(index);
            }
        };
        
        TimerTask secondAIPlays = new TimerTask() {
            @Override
            public void run() {
                ai2playcard(index);
            }
        };
        
        TimerTask thirdAIPlays = new TimerTask() {
            @Override
            public void run() {
                ai3playcard(index);
            }
        };
         
        Timer timer = new Timer();
        timer.schedule(firstAIPlays,1000);
        timer.schedule(secondAIPlays,2000);
        timer.schedule(thirdAIPlays,3000);

    }
    
    
    boolean inPlay = false;
    
    // Delay timer for clearing the played table and updating the scores and history there after
    public void clearCardsAndUpdateScoreDelay(int index){
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                clearPlayedJLabels();
                getHandWinner(player.getPlayerCardDeck().get(index),jane.selectCard(index),bob.selectCard(index),liz.selectCard(index));            
                updateCardHistory(index);
                inPlay = false;
            }
        };
        Timer timer = new Timer();
        timer.schedule(task,4000);        
    }
    
    // method for clearing the played table icons
    public void clearPlayedJLabels(){
        jLabel17.setIcon(null);
        jLabel18.setIcon(null);
        jLabel19.setIcon(null);
        jLabel20.setIcon(null);
    
    }
    
    
    
    public void updateCardHistory(int cardIndex){

        model2.addRow(new Object[]{});
        
        playercard = player.getPlayerCardDeck().get(cardIndex);
        ai1card = jane.selectCard(cardIndex);
        ai2card = bob.selectCard(cardIndex);
        ai3card = liz.selectCard(cardIndex);
        
        model2.setValueAt(playercard.getSuitString() + playercard.getSuitNumberString(),rowIndex,0);
        model2.setValueAt(ai1card.getSuitString() + ai1card.getSuitNumberString(),rowIndex,1);
        model2.setValueAt(ai2card.getSuitString() + ai2card.getSuitNumberString(),rowIndex,2);
        model2.setValueAt(ai3card.getSuitString() + ai3card.getSuitNumberString(),rowIndex,3);
        
        rowIndex++;
            
    }
    
     
    public void playedCard(int index){
        setJlabelImage(jLabel17,index,0);
        numberOfCardsLeft--; 
    }
    
    
    // allow the user and AI's to play
    public void play(int index){
        // player card is played
        playedCard(index);

        // all AI cards are played
        allAIsPlay(index);

        // show playing cards
        setTableVisible();

        // clear cards and update score
        clearCardsAndUpdateScoreDelay(index);
    }
    
    
    public void gameLoop(){
        
            mouseListener = new MouseAdapter() {
            
            //method to capture the mouse when it's hovered over a jLabel
            @Override
            public void mouseEntered(MouseEvent evt2){
                
                String nameOfLabel = ((javax.swing.JLabel)evt2.getSource()).getName();
                
                try
                {
                    Border cardbackgrd = BorderFactory.createLineBorder(Color.BLUE,3);

                    switch(nameOfLabel){  
                        case "jLabel1":
                            jLabel1.setBorder(cardbackgrd);
                            break;
                        case "jLabel2":
                            jLabel2.setBorder(cardbackgrd); 
                            break;
                        case "jLabel3":                         
                            jLabel3.setBorder(cardbackgrd);   
                            break;
                        case "jLabel4":                         
                            jLabel4.setBorder(cardbackgrd);
                            break;
                        case "jLabel5":
                            jLabel5.setBorder(cardbackgrd); 
                            break;
                        case "jLabel6":
                            jLabel6.setBorder(cardbackgrd);
                            break;
                        case "jLabel7":
                            jLabel7.setBorder(cardbackgrd);
                            break;
                        case "jLabel8":
                            jLabel8.setBorder(cardbackgrd);
                            break;
                        case "jLabel9":                        
                            jLabel9.setBorder(cardbackgrd);
                            break;
                        case "jLabel10":
                            jLabel10.setBorder(cardbackgrd);
                            break;
                        case "jLabel11":
                            jLabel11.setBorder(cardbackgrd);
                            break;
                        case "jLabel12":
                            jLabel12.setBorder(cardbackgrd);
                            break;
                        case "jLabel13":
                            jLabel13.setBorder(cardbackgrd); 
                            break;
                    }
                }     
                catch(Exception exception)
                {
                  exception.printStackTrace();
                }

            }
            //method to detect when the mouse leaves a jLabel
            @Override
            public void mouseExited(MouseEvent evt3){
                String sourceName = ((javax.swing.JLabel)evt3.getSource()).getName();
                try
                {
                    Border cardbackgrd = BorderFactory.createLineBorder(Color.WHITE,0);

                    jLabel1.setBorder(cardbackgrd);

                    jLabel2.setBorder(cardbackgrd);

                    jLabel3.setBorder(cardbackgrd);

                    jLabel4.setBorder(cardbackgrd);

                    jLabel5.setBorder(cardbackgrd);

                    jLabel6.setBorder(cardbackgrd);

                    jLabel7.setBorder(cardbackgrd);

                    jLabel8.setBorder(cardbackgrd);

                    jLabel9.setBorder(cardbackgrd);

                    jLabel10.setBorder(cardbackgrd);

                    jLabel11.setBorder(cardbackgrd);

                    jLabel12.setBorder(cardbackgrd);

                    jLabel13.setBorder(cardbackgrd);
                    
                }
                catch(Exception e3)
                {
                    e3.printStackTrace();
                }
            }
            
            @Override
            public void mouseClicked(MouseEvent evt) {
                
                String name = ((javax.swing.JLabel)evt.getSource()).getName();
                
                try{

                    switch (name) {
                        case "jLabel1":
                           if(inPlay){
                               JOptionPane.showMessageDialog(null, "please wait while all players have played");
                           }else{
                               play(0);
                               removePlayedCardFromGUI(jLabel1);
                           }
                           break;
                        case "jLabel2": 
                            if(inPlay){
                               JOptionPane.showMessageDialog(null, "please wait while all players have played");
                            }else{
                                play(1);
                                removePlayedCardFromGUI(jLabel2);
                            }
                            
                            break;
                           
                        case "jLabel3":
                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                             }else{
                                 play(2);
                                 removePlayedCardFromGUI(jLabel3);
                             }

                             break;
                          
                        case "jLabel4":
                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                            }else{
                                 play(3);
                                 removePlayedCardFromGUI(jLabel4);
                            }
                            
                             break;
                           
                        case "jLabel5": 
                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                            }else{
                                 play(4);
                                 removePlayedCardFromGUI(jLabel5);
                            }
                                                                      
                             break;
                          
                        case "jLabel6":

                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                             }else{
                                 play(5);
                                 removePlayedCardFromGUI(jLabel6);
                            }
                            
                            break;
                          
                        case "jLabel7":

                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                             }else{
                                 play(6);
                                 removePlayedCardFromGUI(jLabel7);
                             }
                            
                            
                            break;
                            
                        case "jLabel8":

                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                             }else{
                                 play(7);
                                 removePlayedCardFromGUI(jLabel8);
                            }

                            break;
                          
                        case "jLabel9":
   
                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                             }else{
                                 play(8);
                                 removePlayedCardFromGUI(jLabel9);
                            }
                            
                            
                            break;
                            
                        case "jLabel10":

                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                            }else{
                                 play(9);
                                 removePlayedCardFromGUI(jLabel10);
                            }
                            
                            break;
                          
                        case "jLabel11":

                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                            }else{
                                 play(10);
                                 removePlayedCardFromGUI(jLabel11);
                            }
                            
                            
                            break;
                          
                        case "jLabel12":
    
                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                            }else{
                                 play(11);
                                 removePlayedCardFromGUI(jLabel12);
                            }
                            
                            break;

                        case "jLabel13":

                            if(inPlay){
                                 JOptionPane.showMessageDialog(null, "please wait while all players have played");
                            }else{
                                 play(12);
                                 removePlayedCardFromGUI(jLabel13);
                            }
                                                       
                            break;
                    }
                       
                      
                }
                catch(Exception ie)
                {
                    ie.printStackTrace();
                }
            } 
            };

            // Add addMouseListener for player cards (jLabels 1 to 13)
            addListenerToAll();
              
       
    }
    
    public void addListenerToAll(){
        for (javax.swing.JLabel labels : Arrays.asList(jLabel1,jLabel2,jLabel3,jLabel4,jLabel5,jLabel6,jLabel7,jLabel8,jLabel9,jLabel10,jLabel11,jLabel12,jLabel13)) {
                labels.addMouseListener(mouseListener);
        }
    }
    
    //Add structure to the tables
    public void addRowsToTable(){
        
        //create new DefaultTableModel model1
        DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
        
        //create new DefaultTableModel model2
        DefaultTableModel model2 = (DefaultTableModel)jTable2.getModel();
        
        for(int i = 0; i < 2; i++){
            model1.addRow(new Object[]{});
        }
    }
    
    public int getHighestCard(int []cardsArray, int highest){
        int numberOfHighestCards = 0;
               
        for(int i = 0; i < cardsArray.length;i++){
            if(cardsArray[i] == highest){
                numberOfHighestCards++;
            }
        }
        return numberOfHighestCards;
    }
    
    // Determine hand winner by checking the highest played card(s) and update the winners score
    public void getHandWinner(Card playerCard, Card firstAIplayerCard, Card secondAIplayerCard, Card thirdAIplayerCard)
    {
        
        int playerNumberValue = playerCard.getFaceValue();
        int janeNumberValue = firstAIplayerCard.getFaceValue();
        int bobNumberValue = secondAIplayerCard.getFaceValue();
        int lizNumberValue = thirdAIplayerCard.getFaceValue();
        
        int highest = Math.max(Math.max(playerNumberValue,janeNumberValue),Math.max(bobNumberValue,lizNumberValue));
              
        int [] playedCardsArray = {playerNumberValue,janeNumberValue,bobNumberValue,lizNumberValue};
        
        int scoreToAdd = 2;
        if(getHighestCard(playedCardsArray,highest) > 1){
            scoreToAdd--;
        }
        
        
        //logic to update scores
        if (playerNumberValue == highest){
            player.updateScore(scoreToAdd); 
            player.updateRoundsWon(1);
            playerScore = Integer.toString(player.getScore());
            model1.setValueAt(player.getScore(), 0, 0);
        }
        
        if(janeNumberValue == highest){        
            jane.updateScore(scoreToAdd);
            jane.updateRoundsWon(1);
            ai1_Score = Integer.toString(jane.getScore());
            model1.setValueAt(jane.getScore(), 0, 1);                
        }
        
        if(bobNumberValue == highest){
            bob.updateScore(scoreToAdd);
            bob.updateRoundsWon(1);
            ai2_Score = Integer.toString(bob.getScore());
            model1.setValueAt(bob.getScore(), 0, 2);                        
        }
        
        if(lizNumberValue == highest){
            liz.updateScore(scoreToAdd);
            liz.updateRoundsWon(1);
            ai3_Score = Integer.toString(liz.getScore());
            model1.setValueAt(liz.getScore(), 0, 3);            
        }
        
        gameOverCheck();
        
        if(round < 13){
            round++;
        }
        
        String a = Integer.toString(round);
        jTextField9.setText(a);
    }
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        javax.swing.JLabel [] playerCardJLabelArray = {jLabel1,jLabel2,jLabel3,jLabel4,jLabel5,jLabel6,jLabel7,jLabel8,jLabel9,jLabel10,jLabel11,jLabel12,jLabel13};

        for(int i = 0; i < 13; i++){
            playerCardJLabelArray[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/spadescardgame/Images/cardpics/"+ player.getPlayerCardDeck().get(i).getImage())));           
        }
         
        setHandsVisible();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked

    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel13MouseEntered

    private void jLabel12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel12MouseEntered

    private void jLabel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel11MouseEntered

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel9MouseEntered

    private void jLabel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MouseEntered

    private void jLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7MouseEntered

    private void jLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseEntered

    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseEntered

    private void jLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseEntered

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
     
    }//GEN-LAST:event_jLabel1MouseExited

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        RulesGUI rules = new RulesGUI();
        rules.setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void getPlayerBid(){
        String bidpickup = (String)JOptionPane.showInputDialog(null, "Please enter your Bid: ");
        JOptionPane.showMessageDialog(null, "You bid: " + bidpickup);     
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamePlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamePlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamePlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamePlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamePlayGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
